name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master

jobs:
  configure_git:
    runs-on: ubuntu-latest
    outputs:
      git_email: ${{ steps.set_git_email.outputs.git_email }}
      git_username: ${{ steps.set_git_username.outputs.git_username }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set Git Email
      id: set_git_email
      env:
        GH_EMAIL: ${{ secrets.GH_EMAIL }}
      run: echo "::set-output name=git_email::${{ env.GH_EMAIL }}"

    - name: Set Git Username
      id: set_git_username
      env:
        GH_USERNAME: ${{ secrets.GH_USERNAME }}
      run: echo "::set-output name=git_username::${{ env.GH_USERNAME }}"

  build:
    runs-on: ubuntu-latest
    needs: configure_git
    outputs:
      build_directory: ${{ steps.build.outputs.build_directory }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '18.18.1'

    - name: Install dependencies
      run: npm install --force --legacy-peer-deps

    - name: Verify Dependencies
      run: npm list

    - name: Configure Git
      env:
        GH_EMAIL: ${{ needs.configure_git.outputs.git_email }}
        GH_USERNAME: ${{ needs.configure_git.outputs.git_username }}
      run: |
        git config --global user.email "${{ env.GH_EMAIL }}"
        git config --global user.name "${{ env.GH_USERNAME }}"

    - name: Build
      id: build
      run: |
        CI=false npm run build
        echo "::set-output name=build_directory::build"

    - name: List Build Directory
      run: ls -la build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Deploy
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: npx gh-pages -d ${{ needs.build.outputs.build_directory }}
